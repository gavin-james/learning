import java.text.SimpleDateFormat

// 针对多模块 打包的策略
buildscript {
    // 自定义参数
    ext {
        // 具体版本依赖可以去 https://github.com/alibaba/spring-cloud-alibaba/wiki/%E7%89%88%E6%9C%AC%E8%AF%B4%E6%98%8E 找相应的版本
        springBootVersion = '2.3.12.RELEASE'
        springCloudVersion = 'Hoxton.SR12'
        springCloudAlibabaVersion = "2.2.7.RELEASE"

        xnioVersion = '3.8.7.Final'

        // 实体类相关依赖
        mapstructVersion = '1.5.0.Beta2' // mapstruct 实体类映射

        // 数据库相关依赖
        mysqlVersion = '8.0.25' // mysql 链接驱动
        mpVersion = '3.5.0' // mybatis-plus 操作数据库
        druidVersion = '1.2.8' // 数据库连接池

        // 缓存相关依赖
        pool2Version = '2.11.1' // redis 连接池
        redissonVersion = '3.16.7' //分布式缓存锁

        // 相关工具依赖
        hutoolVersion = '5.7.2' // hutool 简化工具集
        okhttpsVersion = '3.4.1' // http 工具
        ttlVersion = '2.12.4' // ThreadLocal 工具
        jwtVersion = '9.15.2' // jwt 工具

        // 安全相关依赖
        jasyptVersion = '3.0.4' //机密

        // 接口文档依赖
        knife4jVersion = '3.0.3' // 接口文档
        swaggerVersion = '1.5.22' // 接口文档
        swaggerV3Version = '2.1.2' // 接口文档

        // 监控
        adminVersion = '2.3.0'

        // 日志相关
        tlogVersion = '1.3.6'
    }

    // springboot gradle 打包插件依赖
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

// 所有项目配置
allprojects {
    // java增强
    apply plugin: 'java-library'
    // springboot插件
    apply plugin: "org.springframework.boot"
    // spring依赖管理插件
    apply plugin: "io.spring.dependency-management"

    // 项目信息
    group = 'com.gavin'
    // 版本
    version = '0.0.1-SNAPSHOT'

    // 将子项目打成jar包
    java {
        // 定义您的源文件应该被视为哪种语言版本的 Java。
        sourceCompatibility JavaVersion.VERSION_1_8
        // 定义您的代码应该运行的最低 JVM 版本，即它确定编译器生成的字节码版本。
        targetCompatibility JavaVersion.VERSION_1_8
    }

    // 依赖范围配置修改
    configurations {
        // 修改annotationProcessor 使其可以继承
        compileOnly {
            extendsFrom annotationProcessor
        }
    }
    // 设置打包后缀
    tasks.named("jar") {
        archiveClassifier.set("")
    }
    // 指定编码格式 第一种方法
    tasks.withType(JavaCompile) {
        options.encoding = "UTF-8"
    }

    // 测试配置
    test {
        useJUnitPlatform()
    }
}

// 子项目设置
subprojects {

    // 子项目管理依赖
    dependencyManagement {
        imports {
            // Spring-Cloud 依赖
            mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
            // Spring-Alibaba 依赖
            mavenBom "com.alibaba.cloud:spring-cloud-alibaba-dependencies:${springCloudAlibabaVersion}"
        }
        // 子项目管理依赖
        dependencies {
            dependency("org.springframework.boot:spring-boot-starter-web:${springBootVersion}") {
                exclude "org.springframework.boot:spring-boot-starter-tomcat"
            }
            dependency("org.springframework.boot:spring-boot-starter-undertow:${springBootVersion}") {
                exclude "org.jboss.xnio:xnio-nio"
            }

            dependency "org.jboss.xnio:xnio-nio:${xnioVersion}"

            // 数据库相关依赖
            dependency "mysql:mysql-connector-java:${mysqlVersion}"
            dependency "com.baomidou:mybatis-plus-boot-starter:${mpVersion}"
            dependency "com.alibaba:druid-spring-boot-starter:${druidVersion}"

            // 缓存相关依赖
            dependency "org.apache.commons:commons-pool2:${pool2Version}"
            dependency "org.redisson:redisson-spring-boot-starter:${redissonVersion}"

            // mapstruct 实体类映射
            dependency "org.mapstruct:mapstruct-processor:${mapstructVersion}"
            dependency "org.mapstruct:mapstruct:${mapstructVersion}"

            // 工具
            dependency "cn.hutool:hutool-all:${hutoolVersion}"
            dependency "com.ejlchina:okhttps-jackson:${okhttpsVersion}"
            dependency "com.alibaba:transmittable-thread-local:${ttlVersion}"
            dependency "com.nimbusds:nimbus-jose-jwt:${jwtVersion}"

            // jasypt 安全加密
            dependency "com.github.ulisesbocchio:jasypt-spring-boot-starter:${jasyptVersion}"

            // knife4j swagger接口
            dependency "com.github.xiaoymin:knife4j-spring-boot-starter:${knife4jVersion}"
            dependency "com.github.xiaoymin:knife4j-micro-spring-boot-starter:${knife4jVersion}"
            dependency "io.swagger:swagger-annotations:${swaggerVersion}"
            dependency "io.swagger.core.v3:swagger-annotations:${swaggerV3Version}"

            // spring admin 监控
            dependency "de.codecentric:spring-boot-admin-starter-server:${adminVersion}"
            dependency "de.codecentric:spring-boot-admin-starter-client:${adminVersion}"

            // Tlog 日志
            dependency "com.yomahub:tlog-all-spring-boot-starter:${tlogVersion}"
        }
    }

    // 全局依赖
    dependencies {

        // hutool 简化工具集
//        implementation "cn.hutool:hutool-core:${hutoolVersion}"

        // 热部署开发工 idea 中使用 Jrebel
        // developmentOnly 'org.springframework.boot:spring-boot-devtools'

        // 注解依赖
        annotationProcessor(
                // 配置文件解析
                'org.springframework.boot:spring-boot-configuration-processor',
                // lombok 简化开发
                'org.projectlombok:lombok'
        )

        // 测试依赖
        testImplementation('org.springframework.boot:spring-boot-starter-test') {
            exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
        }
    }
}
